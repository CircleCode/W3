<?xml version="1.0" encoding="utf-8"?>
<?xyl-stylesheet href="hoa://Application/Public/Css/Codemirror.css"?>

<overlay xmlns="http://hoa-project.net/xyl/xylophone">
  <article id="content" bind="?ebgd12">
    <h1><em>Grammar-based Testing using Realistic Domains in PHP</em></h1>

    <h2 id="En_direct" for="menu-toc">En direct</h2>

    <form id="experimentation" action="#experimentation" method="POST">
      <p><span class="left"><label for="selection" class="left">exemples : </label>
        <select id="selection" name="selection">
          <option value="basic">Basic</option>
          <option value="json">JSON (Javascript)</option>
          <option value="pcre">PCRE (regular expressions)</option>
        </select></span>
      <span class="right">
      <label for="size" class="left">taille : </label>
      <input type="text" id="size" name="size" value="9"
             validate="boundinteger(1, 11)" onerror="error_size" />
      <error id="error_size">Size should belongs to [1, 11].</error>
      </span></p>
      <p><textarea id="grammar" name="grammar" class="editor" bind="?grammar" /></p>

      <p class="verdict-(?verdict) text-center">
        <input type="submit" name="sample"    value="générer ⬇" />
        <input type="submit" name="predicate" value="⬆ valider" />
      </p>

      <p><textarea id="data" name="data" class="editor" bind="?data" /></p>
      <p>Erreurs :</p>
      <pre bind="?result" />
    </form>

    <h2 id="En_ligne_de_commande" for="menu-toc">En ligne de commande</h2>

    <p>Foobar</p>
  </article>

  <document id="document">
    <script src="/Script/Codemirror.js"></script>
    <script>
      var _editors = document.getElementsByClassName('editor');
      var editors  = [];

      var activeLine = function ( editor ) {

          var line = editor.setLineClass(0, 'CodeMirror-activeline');

          return function ( ) {
              editor.setLineClass(line, null);
              line = editor.setLineClass(
                editor.getCursor().line,
                'CodeMirror-activeline'
              );
          }
      }

      for(var i = 0; i &lt; _editors.length; ++i) {

        editors[i] = CodeMirror.fromTextArea(_editors.item(i));
        editors[i].setOption('lineNumbers', true);
        editors[i].setOption('onCursorActivity', activeLine(editors[i]));
      }

      var select = document.getElementById('selection');

      select.addEventListener('change', function ( ) {

        var request = new XMLHttpRequest();
        request.open('POST', '/Research/EBGD12/Experimentation.html', false);
        request.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
        var data    = new FormData();

        switch(select.value) {

          case 'basic':
            editor.setValue(':-)');
            break;

          case 'json':
            editor.setValue('X-)');
            break;

          case 'pcre':
            data.append('grammar', 'pcre');
            request.send(data);

            if(200 == request.status)
              editor.setValue(request.responseText);
            break;
        }
      });
    </script>
  </document>
</overlay>
